<a name="main" title="<%= t('internal_links.main') %>"></a>
<main id="skip-header-target" role="main">
  <section class="py-3 justify-content-center">

    <% if device_type == 'mobile' %>
      <div class="container-flex mx-4 description">
    <% else %>
      <div class="container-flex mx-6 description">
    <% end %>

      <div class="information col-sm-7">
      <%= render partial: 'resources/idbadge', locals: {:result => @result,:has_digital_instance => @has_digital_instance,:props => { :full => true} } %>
      </div>

      <%= render partial: 'resources/resource_alltabs' %>

      <% stylesheet_link_tag "#{@base_url}/assets/stylesheets/treeview" %>

      <%= javascript_include_tag "#{@base_url}/assets/javascripts/treeview" %>
      <div class="row" id="notes_row">

        <% if device_type == 'mobile' %>
          <div id="record_info" class="col-12">
        <% else %>
          <div id="record_info" class="col-8">
        <% end %>
          <%= render partial: 'resources/infinite_item', locals: {:result => @result, :props => { :full => true} } %>
          <div id="child_info"></div>
        </div>

        <% if device_type == 'mobile' %>
          <div id="sidebar" class="sidebar sidebar-container col-12 sticky-top">
        <% else %>
          <div id="sidebar" class="sidebar sidebar-container col-4 sticky-top">
        <% end %>

          <% if AppConfig[:pui_search_collection_from_collection_organization] %>
            <%= render partial: 'shared/search_collection_form', :locals => {:resource_uri => @result['uri'], :action_text => t('actions.search_in', :type => t('resource._singular'))} %>
          <% end %>
          <div class="sticky-top">
          <div class="bg-light mt-2 p-2 align-content-center">
            <h3 class="h5 text-center">Collection Organization</h3>
          </div>

          <div class="border">
            <div style="text-align: center"></div>
            <ul id="sidebar-tree" class="pb-2 pl-1">
              <progress class="ml-1" style="visibility: visible;"></progress>
              <% current_depth = -1 %>
              <%@ordered_records.each_with_index { |single_record,idx| %>

                <% if single_record['level']!="file" && single_record['level']!= "item"%>
                  <!--Root node-->
                  <% if single_record['depth'] == 0 %>

                    <li id="root"><a href="<%= single_record['ref'] %>"><%=single_record['display_string'] %></a>
                    <% next %>

                   <!-- Sub-list for the current node-->
                  <% elsif single_record['depth'] > current_depth %>
                    <ul id="subtree">
                      <li class=" list-unstyled" ><span class="id-badge"></span><a href="javascript:load_tree('<%= single_record['ref'] %>');"><%=single_record['display_string'] %></a>
                    <% current_depth = single_record['depth'] %>

                    <!--End of the sub-list for the current node-->
                  <% elsif single_record['depth'] < current_depth %>
                    <!--Ending all the sub-lists until the level for current node is reached-->
                      <% while single_record['depth'] < current_depth %>
                      </ul>
                    </li>
                      <% current_depth -= 1 %>
                    <% end %>
                    <li class=" list-unstyled" ><span class="id-badge"></span><a class = "record-title" href="javascript:load_tree('<%= single_record['ref'] %>');"><%=single_record['display_string'] %></a>
                      <% current_depth = single_record['depth'] %>

                    <!--Information for all nodes of the sub-list-->
                  <% else %>
                    <li class=" list-unstyled"><span class="id-badge"></span><a  class = "record-title" href="javascript:load_tree('<%= single_record['ref'] %>');"><%=single_record['display_string'] %></a></li>
                  <% end %>

                <% end %>
              <%} %>
              </li>
            </ul>
          </div>
          </div>
        </div>

      </div>
    </div>
  </section>
</main>

<script>

// Constructing sidebar tree
$('#sidebar-tree').treed({openedClass : 'fa fa-chevron-down', closedClass : 'fa fa-chevron-right'});

//Displaying the main record on page load
$.ajax({
    url: "<%=@result['json']['uri']%>/tree/root",
    type: 'GET',
    dataType: 'json',
    success: function (data) {

        if (data['child_count'] > 0) {

            var content = "<h5 class=\"mt-1\">Contents</h5>";
            var waypoints = data['precomputed_waypoints'];
            for (singleWaypoint in waypoints) {

                var waypointNodes = waypoints[singleWaypoint];

                for (waypointNode in waypointNodes) {

                    var nodesData = waypointNodes[waypointNode];
                    content += " <div id=\"sub-list\">";

                    for (nodeData in nodesData) {
                        //Fetching the identifiers for Contents
                        let data_links=[];
                        let recordId=[];
                        data_links.push(nodesData[nodeData]['uri']);
                        $.ajax({
                            url: "<%=@result['json']['uri']%>/data_identifier",
                            type: 'POST',
                            dataType: 'json',
                            async : false,
                            data: {data_links:data_links},
                            success: function (data) {
                                recordId =  data['identifiers'];
                            }
                        });
                        content+="<p><span>"+recordId[0]+"</span><a href="+nodesData[nodeData]['uri']+"> "+nodesData[nodeData]['title']+ "</a></p>";

                    }

                    content+="</div>";
                    document.getElementById('child_info').innerHTML += content;
                }
            }
        }

    }
});

//Appending identifiers to sidebar
let data_links = [];
//Creating an array of all records that are not file or item level
<%@ordered_records.each_with_index { |single_record,idx| %>
  <% if single_record['level']!="file" && single_record['level']!= "item"%>
    data_links.push("<%=single_record['ref'] %>");
  <% end %>
<% } %>
//Fetching the identifiers for all records in the sidebar
$.ajax({
    url: "<%=@result['json']['uri']%>/data_identifier",
    type: 'POST',
    dataType: 'json',
    data: {data_links:data_links},
    success: function (data) {
        let identifiers = data['identifiers'];
        let i = 1;
        $('.id-badge').each(function(){
            $(this).text(identifiers[i]+" ");
            i++;
        });
        //Hiding the progress bar
        $('progress').css("visibility","hidden");
    }
});
</script>


<script type="text/javascript">
  // Function to load information of record based on sidebar selection
  function load_tree(parent_uri) {

    //Getting the record id from uri
    var parts=parent_uri.split('/');
    var node_id =parseInt(parts[parts.length-1]);

    //Removing the main record from the left panel
    document.getElementById('child_info').innerHTML ="";
    $.ajax({
      url: "<%=@result['json']['uri']%>/tree/node_from_root",
      method: "GET",
      dataType: 'json',
      data: {
          node_ids: [node_id],
      },
      success(record_tree) {
        //Displaying data for all the parent elements of the clicked element
        for (tree_branch in record_tree) {
          var branch_data = record_tree[tree_branch]
          for (node_data in branch_data) {
            if (branch_data[node_data].node) {
              $.ajax({
                async: false,
                url: "<%=@result['json']['uri']%>/tree/infinite_resolve",
                method: "GET",
                data: {
                    resolve_uri: branch_data[node_data].node
                },
                success(resolved_node) {
                    //Appending the data for tree from root to the parent of clicked element
                    document.getElementById('child_info').innerHTML += resolved_node;
                }

              });
            }

          }
        }
        $.ajax({
          async: false,
          url: "<%=@result['json']['uri']%>/tree/infinite_resolve",
          method: "GET",
          data: {
              resolve_uri: parent_uri
          },
          success(resolved_node) {
            //Appending the data for clicked element
            document.getElementById('child_info').innerHTML += resolved_node;
            //Appending the links to the sub-records of the clicked element
            $.ajax({
              url: "<%=@result['json']['uri']%>/tree/node?node=" + parent_uri,
              type: 'GET',
              dataType: 'json',
              async:false,
              success: function (subrecord_links) {

                if (subrecord_links['child_count'] > 0) {

                  var content = "<h5 class=\"mt-1\">Contents</h5>";
                  var waypoints = subrecord_links['precomputed_waypoints'];
                  for (singleWaypoint in waypoints) {

                    var waypointNodes = waypoints[singleWaypoint];

                    for (waypointNode in waypointNodes) {
                      var nodesData = waypointNodes[waypointNode];
                      content += " <div id=\"sub-list\">";
                      for (nodeData in nodesData) {

                        $.ajax({
                          url: "<%=@result['json']['uri']%>/raw_json?record_uri=" + nodesData[nodeData]['uri'],
                          type: 'GET',
                          dataType: 'json',
                          async:false,
                              success: function(record_data){
                              //Fteching the identifiers for Content of the clicked record
                              let data_links=[];
                              let recordId=[];
                              data_links.push(nodesData[nodeData]['uri']);
                                  $.ajax({
                                      url: "<%=@result['json']['uri']%>/data_identifier",
                                      type: 'POST',
                                      dataType: 'json',
                                      async : false,
                                      data: {data_links:data_links},
                                      success: function (data) {
                                          recordId =  data['identifiers'];
                                      }
                                  });
                                  content+="<p><span>"+recordId[0]+"</span><a href="+nodesData[nodeData]['uri']+"> "+record_data['display_string']+"</a></p>";
                              }
                        });
                      }
                      content+="</div>";
                      document.getElementById('child_info').innerHTML += content;
                    }
                  }
                }
              }
            });
          }
        });
      }
    });
  }

</script>

<%= render partial: 'shared/modal_actions' %>